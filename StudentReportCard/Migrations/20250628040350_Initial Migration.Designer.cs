// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentReportCard.Data;

#nullable disable

namespace StudentReportCard.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250628040350_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentReportCard.Model.Entities.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYear_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicYear_Id"));

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcademicYear_Id");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Class", b =>
                {
                    b.Property<int>("Class_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Class_Id"));

                    b.Property<string>("Class_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Class_Id");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Exam", b =>
                {
                    b.Property<int>("Exam_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Exam_Id"));

                    b.Property<string>("Exam_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Exam_Id");

                    b.ToTable("exams");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.ExamSubject", b =>
                {
                    b.Property<int>("ExamSubject_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamSubject_Id"));

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("MaxMarks")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("ExamSubject_Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("SubjectId");

                    b.ToTable("examSubjects");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Section", b =>
                {
                    b.Property<int>("Section_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Section_Id"));

                    b.Property<string>("Section_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Section_Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Student", b =>
                {
                    b.Property<int>("Student_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_Id"));

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Student_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Student_Id");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SectionId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.StudentMark", b =>
                {
                    b.Property<int>("StudentMark_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentMark_Id"));

                    b.Property<int>("ExamSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("MarksObtained")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("StudentMark_Id");

                    b.HasIndex("ExamSubjectId");

                    b.HasIndex("StudentId");

                    b.ToTable("studentMarks");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Subject", b =>
                {
                    b.Property<int>("Subject_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subject_Id"));

                    b.Property<string>("Subject_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Subject_Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.ExamSubject", b =>
                {
                    b.HasOne("StudentReportCard.Model.Entities.Exam", "Exam")
                        .WithMany("Exam_Subjects")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentReportCard.Model.Entities.Subject", "Subject")
                        .WithMany("ExamSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Student", b =>
                {
                    b.HasOne("StudentReportCard.Model.Entities.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentReportCard.Model.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentReportCard.Model.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.StudentMark", b =>
                {
                    b.HasOne("StudentReportCard.Model.Entities.ExamSubject", "ExamSubject")
                        .WithMany()
                        .HasForeignKey("ExamSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentReportCard.Model.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamSubject");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Exam", b =>
                {
                    b.Navigation("Exam_Subjects");
                });

            modelBuilder.Entity("StudentReportCard.Model.Entities.Subject", b =>
                {
                    b.Navigation("ExamSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
